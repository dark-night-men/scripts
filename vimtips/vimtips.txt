:r ! ls -1

:arg *.cpp                             All *.cpp files in current directory.
:argadd *.h                            And all *.h files.
:arg                                   Optional: Display the current arglist.
:argdo %s/pattern/replace/ge | update  Search and replace in all files in arglist.

#To avoid expansion in insert mode, type Ctrl-V after the last character of the abbreviation (on Windows, type Ctrl-Q instead of Ctrl-V).

set split  set split? set nosplit

set nopaste paste

./install.py --clang-completer --system-libclang

DirDiff ./autonomous_projects/my_diagramscene/diagramscene ./QtTestTmp/diagramscene

bufdo vimgrepadd /pattern/ % 

ls -la | vim -R -

:redir @a
:set all
:redir END
"ap             "redirecton 'set all' command to a reg and paste it

:redir! > vim_maps.txt
:map
:map!
:redir END

:lv /\citerat/  `find  -maxdepth 3 -type f -iname '*.cpp' -o -iname '*.h' `

Open a preview window showing the declaration with <C-w>}

'^ '. ']
]) ]} "like %"
`) `]

/\ccopyright - case INsensitive
/\Ccopyright - case sensitive


["x]gP	Just like "P", but leave the cursor just after the new text.

gU{motion}	make Nmove text uppercase
g~{motion}	swap case for Nmove text
gJ		join lines without inserting space

'^  `^			To the position where the cursor was the last time Insert mode was stopped.  This is used by the gi| command.  Not set when the |:keepjumps| command modifier was used.  {not in Vi}

''  ``			To the position before the latest jump, or where the last "m'" or "m`" command was given.  Not set when the

'"  `"			To the cursor position when last exiting the current buffer.  Defaults to the first character of the first line.

'<  `<			To the first line or character of the last selected
			Visual area in the current buffer.

:let @{reg-name} = {expr1}
:let @a = @1
